{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/posts/posts.component.ts","webpack:///src/app/posts/posts.component.html","webpack:///src/app/services/api.service.ts","webpack:///src/app/singlepost/singlepost.component.ts","webpack:///src/app/singlepost/singlepost.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","PostsComponent","apiService","loading","posts","postsBase","optionFuse","searchForm","get","subscribe","data","error","console","log","alert","JSON","stringify","controls","search","value","fuse","buscar","API_URL","ApiService","http","router","url","params","options","httpOptions","body","post","put","_httpOptions","SinglepostComponent","activatedRoute","comentarios","response","goBack","navigate","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PostsComponent } from './posts/posts.component';\nimport { SinglepostComponent } from './singlepost/singlepost.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'posts',\n    pathMatch: 'full',\n  },\n  {\n    path: 'posts',\n    component: PostsComponent,\n  },\n  {\n    path: 'singlepost/:id',\n    component: SinglepostComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'blog-app';\n}\n","<nav class=\"navbar navbar-dark bg-dark text-center\">\n  <div class=\"navbar-header\">\n    <a class=\"navbar-brand\" href=\"/\">\n      <strong>B R A N D N E W S</strong>\n    </a>\n  </div>\n</nav>\n\n<div class=\"container mt-5\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PostsComponent } from './posts/posts.component';\nimport { ApiService } from './services/api.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SinglepostComponent } from './singlepost/singlepost.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostsComponent,\n    SinglepostComponent\n  ],\n  imports: [\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [\n    ApiService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import * as _ from \"lodash\";\nimport * as Fuse from \"fuse.js\";\nimport { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../services/api.service';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.scss']\n})\nexport class PostsComponent implements OnInit {\n\n  loading = false;\n  posts = [];\n  postsBase = [];\n  searchForm;\n\n  optionFuse: any = {\n    keys: [\"title\", \"body\"]\n  }\n\n  constructor(\n    private apiService: ApiService\n  ) {\n    this.searchForm = new FormGroup({\n      \"search\": new FormControl(\"\", [])\n    })\n  }\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.apiService\n      .get(\"/posts\")\n      .subscribe((data: any) => {\n        this.postsBase = _.cloneDeep(data);\n        this.posts = _.cloneDeep(data);\n        this.loading = false;\n\n      }, error => {\n        console.log(\"error\", error)\n        alert(JSON.stringify(error.error || error))\n        this.loading = false;\n      })\n  }\n\n  buscar() {\n    if (this.searchForm.controls.search.value) {\n      let fuse = new Fuse(this.postsBase, this.optionFuse);\n      this.posts = fuse.search(this.searchForm.controls.search.value || \"\");\n\n    } else {\n      this.posts = _.cloneDeep(this.postsBase);\n    }\n  }\n\n}\n","<h2>News</h2>\n\n<div class=\"row\">\n  <div class=\"col-12 col-sm-12 col-md-12 mb-4\">\n    <form [formGroup]=\"searchForm\" class=\"form-inline my-2 my-lg-0\" (submit)=\"buscar()\">\n      <input (input)=\"buscar()\" class=\"form-control mr-sm-2\" type=\"search\" formControlName=\"search\" placeholder=\"Search by user\" aria-label=\"Search\">\n      <!-- <button class=\"btn my-2 my-sm-0\" type=\"submit\">\n        <i class=\"fas fa-search\"></i>\n      </button> -->\n    </form>\n  </div>\n  <div class=\"col-12\">\n    <div class=\"text-center\" *ngIf=\"loading\">\n      Loading...\n    </div>\n    <div class=\"tarjeta\" *ngFor=\"let post of posts;\" [routerLink]=\"['/singlepost/' + post.id]\">\n      <div class=\"titulo-tarjeta\">{{ post.title }}</div>\n      <div class=\"titulo-descripcion\">{{ post.body }}</div>\n    </div>\n  </div>\n</div>\n","import { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nexport const API_URL = \"https://jsonplaceholder.typicode.com\";\n\n@Injectable()\nexport class ApiService {\n\n  get httpOptions(): any {\n    let _httpOptions: any = {\n      \"headers\": {\n        \"Content-Type\": \"application/json\",\n      }\n    }\n    return _httpOptions;\n  }\n\n  constructor(public http: HttpClient, public router: Router) { }\n\n  get(url: string, params?) {\n    let options = {\n      ...this.httpOptions,\n      params\n    }\n    return this.http.get(`${API_URL}${url}`, options);\n  }\n\n  post(url: string, body: any) {\n    return this.http.post(`${API_URL}${url}`, body, this.httpOptions);\n  }\n\n  put(url: string, body: any) {\n    return this.http.put(`${API_URL}${url}`, body, this.httpOptions);\n  }\n\n  delete(url: string) {\n    return this.http.delete(`${API_URL}${url}`, this.httpOptions);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../services/api.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { forkJoin } from 'rxjs';\n\n@Component({\n  selector: 'app-singlepost',\n  templateUrl: './singlepost.component.html',\n  styleUrls: ['./singlepost.component.scss']\n})\nexport class SinglepostComponent implements OnInit {\n\n  id;\n  post: any = {};\n  comentarios = [];\n  loading = false;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private activatedRoute: ActivatedRoute,\n  ) {\n    this.activatedRoute\n      .params\n      .subscribe(params => {\n        if (params.id) {\n\n          this.loading = true;\n          this.id = params.id;\n\n          this.apiService.get(\"/posts/\" + this.id)\n            .subscribe((response: any) => {\n              this.post = response;\n              this.loading = false;\n\n            }, error => {\n              console.log(error);\n              alert(JSON.stringify(error.error || error))\n              this.loading = false;\n              // this.goBack();\n            })\n\n          this.apiService.get(\"/posts/\" + this.id + \"/comments\")\n            .subscribe((response: any) => {\n              this.comentarios = response;\n\n            }, error => {\n              console.log(error);\n              alert(JSON.stringify(error.error || error))\n              // this.goBack();\n            })\n        } else {\n          this.goBack()\n        }\n      })\n  }\n\n  goBack() {\n    this.router.navigate([\"/posts\"])\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"text-center mt-4\" *ngIf=\"loading\">\n  Loading...\n</div>\n\n<div class=\"singlepost mt-4\" *ngIf=\"!loading && post.title\">\n  <h1>\n    <strong class=\"titulo\">\n      {{ post.title }}\n    </strong>\n  </h1>\n\n  <div class=\"user mt-2 mb-2\">By user: {{ post.userId }} </div>\n\n  <div class=\"descripcion\" [innerHTML]=\"post.body\"></div>\n\n  <h2 class=\"mt-4 pt-4\" style=\"color: #444\">Comments</h2>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"comentario\" *ngFor=\"let com of comentarios;\">\n        <div class=\"titulo-comentario\">\n          {{ com.email }}\n        </div>\n        <div class=\"descripcion-comentario\">\n          {{ com.body }}\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 mt-4 text-right\">\n      <button type=\"button\" class=\"btn btn-dark\" (click)=\"goBack()\">Dashboard</button>\n    </div>\n  </div>\n\n  <br>\n  <br>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}